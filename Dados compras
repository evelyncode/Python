Você recebeu a tarefa de analisar os dados de compras de um web site! Os dados estão no formato JSON e disponíveis junto com este notebook.

No site, cada usuário efetua login usando sua conta pessoal e pode adquirir produtos à medida que navega pela lista de produtos oferecidos. Cada produto possui um valor de venda. Dados de idade e sexo de cada usuário foram coletados e estão fornecidos no arquivo JSON.

Seu trabalho é entregar uma análise de comportamento de compra dos consumidores. Esse é um tipo de atividade comum realizado por Cientistas de Dados e o resultado deste trabalho pode ser usado, por exemplo, para alimentar um modelo de Machine Learning e fazer previsões sobre comportamentos futuros.

Mas nesta missão você vai analisar o comportamento de compra dos consumidores usando o pacote Pandas da linguagem Python e seu relatório final deve incluir cada um dos seguintes itens:

** Contagem de Compradores **

Número total de compradores
** Análise Geral de Compras **

Número de itens exclusivos
Preço médio de compra
Número total de compras
Rendimento total
** Informações Demográficas Por Gênero **

Porcentagem e contagem de compradores masculinos
Porcentagem e contagem de compradores do sexo feminino
Porcentagem e contagem de outros / não divulgados
** Análise de Compras Por Gênero **

Número de compras
Preço médio de compra
Valor Total de Compra
Compras for faixa etária
** Identifique os 5 principais compradores pelo valor total de compra e, em seguida, liste (em uma tabela): **

Login
Número de compras
Preço médio de compra
Valor Total de Compra
Itens mais populares
** Identifique os 5 itens mais populares por contagem de compras e, em seguida, liste (em uma tabela): **

ID do item
Nome do item
Número de compras
Preço do item
Valor Total de Compra
Itens mais lucrativos
** Identifique os 5 itens mais lucrativos pelo valor total de compra e, em seguida, liste (em uma tabela): **

ID do item
Nome do item
Número de compras
Preço do item
Valor Total de Compra
** Como considerações finais: **

Seu script deve funcionar para o conjunto de dados fornecido.
Você deve usar a Biblioteca Pandas e o Jupyter Notebook.
1
# Imports
2
import pandas as pd
3
import numpy as np
1
# Carrega o arquivo
2
load_file = "dados_compras.json"
3
purchase_file = pd.read_json(load_file, orient = "records")
4
purchase_file.head()
Idade	Item ID	Login	Nome do Item	Sexo	Valor
0	38	165	Aelalis34	Bone Crushing Silver Skewer	Masculino	3.37
1	21	119	Eolo46	Stormbringer, Dark Blade of Ending Misery	Masculino	2.32
2	34	174	Assastnya25	Primitive Blade	Masculino	2.46
3	21	92	Pheusrical25	Final Critic	Masculino	1.36
4	23	63	Aela59	Stormfury Mace	Masculino	1.27
Informações Sobre os Compradores
1
player_demographics = purchase_file.loc[:, ["Sexo", "Login", "Idade"]]
2
player_demographics.head()
Sexo	Login	Idade
0	Masculino	Aelalis34	38
1	Masculino	Eolo46	21
2	Masculino	Assastnya25	34
3	Masculino	Pheusrical25	21
4	Masculino	Aela59	23
1
# Limpeza dos dados e remoção de duplicatas
2
player_demographics = player_demographics.drop_duplicates()
3
player_count = player_demographics.count()[0]
4
player_count
573
1
# Converter saída para DF para uso posterior em análise
2
pd.DataFrame({"Total de Jogadores" : [player_count]})
Total de Jogadores
0	573
Análise de Compra
1
# Cálculos básicos
2
average_item_price = purchase_file["Valor"].mean()
3
total_item_price = purchase_file["Valor"].sum()
4
total_item_count = purchase_file["Valor"].count()
5
item_id = len(purchase_file["Item ID"].unique())
6
​
7
# Dataframe para os resultados
8
summary_calculations = pd.DataFrame({"Número de Itens Únicos" : item_id,
9
                                     "Número de Compras" : total_item_count, 
10
                                     "Total de Vendas" : total_item_price, 
11
                                     "Preço Médio" : [average_item_price]})
12
​
13
# Data Munging
14
summary_calculations = summary_calculations.round(2)
15
summary_calculations ["Preço Médio"] = summary_calculations["Preço Médio"].map("${:,.2f}".format)
16
summary_calculations ["Total de Vendas"] = summary_calculations["Total de Vendas"].map("${:,.2f}".format)
17
summary_calculations = summary_calculations.loc[:, ["Número de Itens Únicos", "Preço Médio", "Número de Compras", "Total de Vendas"]]
18
​
19
    summary_calculations
Número de Itens Únicos	Preço Médio	Número de Compras	Total de Vendas
0	183	$2.93	780	$2,286.33
1
purchase_file["Item ID"].unique()
array([165, 119, 174,  92,  63,  10, 153, 169, 118,  99,  57,  47,  81,
        77,  44,  96, 123,  59,  91, 177,  78,   3,  11, 183,  65, 132,
       106,  49,  45, 155,  37,  48,  90,  13, 171,  25,   7, 124,  68,
        85, 120,  17, 141,  73, 151,  32,  51, 101, 140,  31,  34,   2,
        86,  39,  28, 160, 134,  83,  38, 158, 110, 122,  54, 105,  87,
        23, 144, 128, 175,  46, 150, 152, 108, 172, 167, 181,  20, 130,
       111, 103,  30, 139, 173,  55, 115,  35,  42,   9,  84, 180, 102,
        53,  18,  74, 126,  50,  62, 125, 121, 129, 149,  12,  71,  14,
        58,  27,  52,  66, 100, 112,  24,  94, 107,   0, 182,  97,  70,
        89,   1, 170,  93, 179,  36,  75, 143, 137, 176, 148, 127, 147,
       161, 154, 157, 116,  61, 131,  41, 145,  60, 162, 135,   8,  40,
        15,  29,  72, 114, 117,  79,  88, 104,  95,  64,  98,  33,  76,
       146, 166,  56,  22,  21,  16,  67, 133,  69, 159,  82, 113, 164,
         6, 163,   5,  19, 168, 136,  80,  26, 142, 178, 156, 109,  43,
         4])
Informações Demográficas
1
# Cálculos básicos
2
gender_count = player_demographics["Sexo"].value_counts()
3
gender_percent = (gender_count / player_count) * 100
4
​
5
# Dataframe para os resultados
6
gender_demographics = pd.DataFrame({"Sexo" : gender_count, 
7
                                    "%" : gender_percent})
8
​
9
# Data Munging
10
gender_demographics = gender_demographics.round(2)
11
gender_demographics ["%"] = gender_demographics["%"].map("{:,.1f}%".format)
1
# Output Test
2
gender_count
Masculino                465
Feminino                 100
Outro / Não Divulgado      8
Name: Sexo, dtype: int64
1
# Output Test
2
gender_percent
Masculino                81.151832
Feminino                 17.452007
Outro / Não Divulgado     1.396161
Name: Sexo, dtype: float64
1
# Output Test
2
gender_demographics
Sexo	%
Masculino	465	81.2%
Feminino	100	17.4%
Outro / Não Divulgado	8	1.4%
Análise de Compra Por Gênero
1
# Agrupamentos
2
gender_total_item_price = purchase_file.groupby(["Sexo"]).sum()["Valor"].rename("Total de Vendas")
3
gender_average_item_price = purchase_file.groupby(["Sexo"]).mean()["Valor"].rename("Average Price")
4
purchase_count = purchase_file.groupby(["Sexo"]).count()["Valor"].rename("Número de Compras")
5
normalized_total = gender_total_item_price / gender_demographics["Sexo"]
6
​
7
# Armazenando o resultado em um Dataframe
8
gender_purchasing_analysis = pd.DataFrame({"Número de Compras" : purchase_count, 
9
                                           "Valor Médio Por Item" : gender_average_item_price, 
10
                                           "Total de Vendas" : gender_total_item_price, 
11
                                           "Total Normalizado" : normalized_total})
12
​
13
# Data Munging
14
gender_purchasing_analysis = gender_purchasing_analysis.round(2)
15
gender_purchasing_analysis ["Valor Médio Por Item"] = gender_purchasing_analysis["Valor Médio Por Item"].map("${:,.2f}".format)
16
gender_purchasing_analysis ["Total de Vendas"] = gender_purchasing_analysis["Total de Vendas"].map("${:,.2f}".format)
17
gender_purchasing_analysis ["Total Normalizado"] = gender_purchasing_analysis["Total Normalizado"].map("${:,.2f}".format)
1
# Resultado
2
gender_total_item_price
Sexo
Feminino                  382.91
Masculino                1867.68
Outro / Não Divulgado      35.74
Name: Total de Vendas, dtype: float64
1
# Resultado
2
gender_average_item_price
Sexo
Feminino                 2.815515
Masculino                2.950521
Outro / Não Divulgado    3.249091
Name: Average Price, dtype: float64
1
# Resultado
2
gender_purchasing_analysis
Número de Compras	Valor Médio Por Item	Total de Vendas	Total Normalizado
Sexo				
Feminino	136	$2.82	$382.91	$3.83
Masculino	633	$2.95	$1,867.68	$4.02
Outro / Não Divulgado	11	$3.25	$35.74	$4.47
1
# Resultado
2
normalized_total
Feminino                 3.829100
Masculino                4.016516
Outro / Não Divulgado    4.467500
dtype: float64
Análise Demográfica
1
player_demographics
Sexo	Login	Idade
0	Masculino	Aelalis34	38
1	Masculino	Eolo46	21
2	Masculino	Assastnya25	34
3	Masculino	Pheusrical25	21
4	Masculino	Aela59	23
5	Masculino	Tanimnya91	20
6	Masculino	Undjaskla97	20
7	Feminino	Iathenudil29	29
8	Masculino	Sondenasta63	25
9	Masculino	Hilaerin92	31
10	Masculino	Chamosia29	24
11	Masculino	Sally64	20
12	Masculino	Iskossa88	30
13	Masculino	Seorithstilis90	23
14	Masculino	Sundast29	40
15	Masculino	Haellysu29	21
16	Feminino	Sundista85	22
17	Feminino	Aenarap34	22
18	Masculino	Iskista88	28
19	Masculino	Assossa43	31
20	Masculino	Irith83	24
21	Masculino	Iaralrgue74	15
22	Feminino	Deural48	11
23	Masculino	Chanosia65	19
24	Masculino	Qarwen67	11
25	Masculino	Idai61	21
26	Masculino	Aerithllora36	29
28	Masculino	Ilariarin45	15
29	Feminino	Phaedai25	16
30	Feminino	Eulaeria40	21
...	...	...	...
729	Masculino	Iskichinya81	16
730	Feminino	Hiadanurin36	10
731	Feminino	Tyaelly53	20
732	Feminino	Shidai42	23
733	Masculino	Bartassaya73	16
734	Masculino	Mindosiasya28	13
736	Masculino	Indirrian56	19
737	Masculino	Sondim68	22
739	Feminino	Cosadar58	35
741	Masculino	Leyirra83	24
742	Masculino	Inguron55	26
746	Masculino	Ralasti48	35
747	Masculino	Lamon28	32
748	Masculino	Isri49	15
750	Masculino	Eollym91	23
752	Feminino	Yalostiphos68	15
755	Feminino	Ailaesuir66	22
756	Masculino	Siasri67	22
758	Masculino	Ryastycal90	20
761	Masculino	Raeduerin33	28
764	Masculino	Assassasda84	25
766	Feminino	Nitherian58	22
768	Masculino	Chamucosda93	21
769	Masculino	Frichilsasya78	24
770	Masculino	Aenasu69	22
771	Masculino	Lassista97	24
772	Masculino	Sidap51	15
773	Masculino	Chamadarsda63	21
778	Masculino	Quelaton80	20
779	Feminino	Alim85	23
573 rows × 3 columns

1
# Cálculos básicos
2
age_bins = [0, 9.99, 14.99, 19.99, 24.99, 29.99, 34.99, 39.99, 999]
3
age_bracket = ["Menos de 10", "10 a 14", "15 a 19", "20 a 24", "25 a 29", "30 a 34", "35 a 39", "Mais de 40"]
4
​
5
purchase_file["Range de Idades"] = pd.cut(purchase_file["Idade"], age_bins, labels=age_bracket)
6
​
7
# Cálculos básicos
8
age_demographics_count = purchase_file["Range de Idades"].value_counts()
9
age_demographics_average_item_price = purchase_file.groupby(["Range de Idades"]).mean()["Valor"]
10
age_demographics_total_item_price = purchase_file.groupby(["Range de Idades"]).sum()["Valor"]
11
age_demographics_percent = (age_demographics_count / player_count) * 100
12
​
13
# Dataframe para os resultados
14
age_demographics = pd.DataFrame({"Contagem": age_demographics_count, "%": age_demographics_percent, "Valor Unitario": age_demographics_average_item_price, "Valor Total de Compra": age_demographics_total_item_price})
15
​
16
# Data Munging
17
age_demographics ["Valor Unitario"] = age_demographics["Valor Unitario"].map("${:,.2f}".format)
18
age_demographics ["Valor Total de Compra"] = age_demographics["Valor Total de Compra"].map("${:,.2f}".format)
19
age_demographics ["%"] = age_demographics["%"].map("{:,.2f}%".format)
1
# Resultado
2
player_demographics.head()
Sexo	Login	Idade
0	Masculino	Aelalis34	38
1	Masculino	Eolo46	21
2	Masculino	Assastnya25	34
3	Masculino	Pheusrical25	21
4	Masculino	Aela59	23
1
# Resultado
2
age_demographics = age_demographics.sort_index()
3
age_demographics
Contagem	%	Valor Unitario	Valor Total de Compra
10 a 14	35	6.11%	$2.77	$96.95
15 a 19	133	23.21%	$2.91	$386.42
20 a 24	336	58.64%	$2.91	$978.77
25 a 29	125	21.82%	$2.96	$370.33
30 a 34	64	11.17%	$3.08	$197.25
35 a 39	42	7.33%	$2.84	$119.40
Mais de 40	17	2.97%	$3.16	$53.75
Menos de 10	28	4.89%	$2.98	$83.46
Top Spenders
1
# Cálculos básicos
2
user_total = purchase_file.groupby(["Login"]).sum()["Valor"].rename("Valor Total de Compra")
3
user_average = purchase_file.groupby(["Login"]).mean()["Valor"].rename("Valor Médio de Compra")
4
user_count = purchase_file.groupby(["Login"]).count()["Valor"].rename("Número de Compras")
5
​
6
# Dataframe para os resultados
7
user_data = pd.DataFrame({"Valor Total de Compra": user_total, "Valor Médio de Compra": user_average, "Número de Compras": user_count})
8
​
9
# Data Munging
10
user_data ["Valor Total de Compra"] = user_data["Valor Total de Compra"].map("${:,.2f}".format)
11
user_data ["Valor Médio de Compra"] = user_data["Valor Médio de Compra"].map("${:,.2f}".format)
12
user_data.sort_values("Valor Total de Compra", ascending=False).head(5)
Valor Total de Compra	Valor Médio de Compra	Número de Compras
Login			
Qarwen67	$9.97	$2.49	4
Sondim43	$9.38	$3.13	3
Tillyrin30	$9.19	$3.06	3
Lisistaya47	$9.19	$3.06	3
Tyisriphos58	$9.18	$4.59	2
1
# Resultado 
2
user_data
Valor Total de Compra	Valor Médio de Compra	Número de Compras
Login			
Adairialis76	$2.46	$2.46	1
Aduephos78	$6.70	$2.23	3
Aeduera68	$5.80	$1.93	3
Aela49	$2.46	$2.46	1
Aela59	$1.27	$1.27	1
Aelalis34	$5.06	$2.53	2
Aelin32	$3.14	$3.14	1
Aeliriam77	$6.72	$3.36	2
Aeliriarin93	$2.04	$2.04	1
Aeliru63	$8.98	$4.49	2
Aellyria80	$4.32	$4.32	1
Aellyrialis39	$3.15	$3.15	1
Aellysup38	$3.61	$3.61	1
Aelollo59	$1.55	$1.55	1
Aenarap34	$1.65	$1.65	1
Aenasu69	$3.27	$3.27	1
Aeral43	$2.72	$2.72	1
Aeral85	$4.25	$4.25	1
Aeral97	$2.35	$2.35	1
Aeri84	$6.60	$3.30	2
Aerillorin70	$1.88	$1.88	1
Aerithllora36	$10.45	$3.48	3
Aerithnucal56	$3.18	$1.59	2
Aerithnuphos61	$1.69	$1.69	1
Aerithriaphos45	$2.38	$2.38	1
Aesty51	$1.82	$1.82	1
Aesur96	$4.66	$4.66	1
Aethe80	$2.32	$2.32	1
Aethedru70	$2.97	$2.97	1
Aidain51	$6.84	$3.42	2
...	...	...	...
Undjaskla97	$4.57	$4.57	1
Undjasksya56	$4.53	$4.53	1
Undotesta33	$3.90	$3.90	1
Wailin72	$2.04	$2.04	1
Whaestysu86	$4.08	$4.08	1
Yadacal26	$1.93	$1.93	1
Yadaisuir65	$8.56	$4.28	2
Yadanun74	$9.09	$3.03	3
Yalaeria91	$1.88	$1.88	1
Yaliru88	$3.71	$3.71	1
Yalo71	$2.41	$2.41	1
Yalostiphos68	$2.37	$2.37	1
Yaralnura48	$4.19	$2.10	2
Yararmol43	$1.55	$1.55	1
Yarirarn35	$2.88	$2.88	1
Yaristi64	$1.24	$1.24	1
Yarithllodeu72	$2.19	$2.19	1
Yarithphos28	$2.35	$2.35	1
Yarithsurgue62	$4.81	$2.41	2
Yarmol79	$2.91	$2.91	1
Yarolwen77	$6.98	$3.49	2
Yasriphos60	$10.40	$3.47	3
Yasrisu92	$2.60	$2.60	1
Yasur35	$2.78	$2.78	1
Yasur85	$2.04	$2.04	1
Yasurra52	$3.14	$3.14	1
Yathecal72	$7.77	$3.88	2
Yathecal82	$2.41	$2.41	1
Zhisrisu83	$2.46	$1.23	2
Zontibe81	$3.71	$3.71	1
573 rows × 3 columns

Itens Mais Populares
1
# Cálculos básicos
2
user_total = purchase_file.groupby(["Nome do Item"]).sum()["Valor"].rename("Valor Total de Compra")
3
user_average = purchase_file.groupby(["Nome do Item"]).mean()["Valor"].rename("Valor Médio de Compra")
4
user_count = purchase_file.groupby(["Nome do Item"]).count()["Valor"].rename("Número de Compras")
5
​
6
# Dataframe para os resultados
7
user_data = pd.DataFrame({"Valor Total de Compra": user_total, "Valor Médio de Compra": user_average, "Número de Compras": user_count})
8
​
9
# Data Munging
10
user_data ["Valor Total de Compra"] = user_data["Valor Total de Compra"].map("${:,.2f}".format)
11
user_data ["Valor Médio de Compra"] = user_data["Valor Médio de Compra"].map("${:,.2f}".format)
12
user_data.sort_values("Número de Compras", ascending=False).head(5)
Valor Total de Compra	Valor Médio de Compra	Número de Compras
Nome do Item			
Final Critic	$38.60	$2.76	14
Arcane Gem	$24.53	$2.23	11
Betrayal, Whisper of Grieving Widows	$25.85	$2.35	11
Stormcaller	$34.65	$3.46	10
Woeful Adamantite Claymore	$11.16	$1.24	9
Itens Mais Lucrativos
1
# Cálculos básicos
2
user_total = purchase_file.groupby(["Nome do Item"]).sum()["Valor"].rename("Valor Total de Compra")
3
user_average = purchase_file.groupby(["Nome do Item"]).mean()["Valor"].rename("Valor Médio de Compra")
4
user_count = purchase_file.groupby(["Nome do Item"]).count()["Valor"].rename("Número de Compras")
5
​
6
# Dataframe para os resultados
7
user_data = pd.DataFrame({"Valor Total de Compra": user_total, "Valor Médio de Compra": user_average, \
8
                          "Número de Compras": user_count})
9
​
10
# Data Munging
11
user_data ["Valor Total Compra"] = user_data["Valor Total de Compra"]
12
user_data ["Valor Total de Compra"] = user_data["Valor Total de Compra"].map("${:,.2f}".format)
13
user_data ["Valor Médio de Compra"] = user_data["Valor Médio de Compra"].map("${:,.2f}".format)
14
​
15
​
16
display(user_data.sort_values("Valor Total Compra", ascending=False).head(5)[ \
17
    ['Valor Total de Compra','Valor Médio de Compra','Número de Compras']])
Valor Total de Compra	Valor Médio de Compra	Número de Compras
Nome do Item			
Final Critic	$38.60	$2.76	14
Retribution Axe	$37.26	$4.14	9
Stormcaller	$34.65	$3.46	10
Spectral Diamond Doomblade	$29.75	$4.25	7
Orenmir	$29.70	$4.95	6
